{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red148\green108\blue71;\red135\green135\blue135;\red67\green67\blue67;
\red12\green99\blue153;}
\margl1440\margr1440\vieww16460\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs20 \cf0 Laravel Tutorial 
\f1\b0 \
\

\f0\b Creating Your Application
\f1\b0 \
\
1. Install Composer\
\
	- \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 curl \cf2 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 -\cf0 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 sS https\cf3 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 :\cf2 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 //\cf0 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 getcomposer\cf3 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 .\cf0 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 org\cf2 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 /\cf0 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 installer \cf2 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 |\cf0 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0  php\
\pard\pardeftab720
\cf0 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 	- mv composer\cf3 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 .\cf0 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 phar \cf2 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 /\cf0 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 usr\cf2 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 /\cf0 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 local\cf2 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 /\cf0 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 bin\cf2 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 /\cf0 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 composer\kerning1\expnd0\expndtw0 \shad0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
2. Install Laravel using Composer using \'93\shad\shadx0\shady-20\shadr0\shado255 \shadc0 composer global require "laravel/installer=~1.1"\
\shad0 \
3. Create project using: 
\f0\b \'93\kerning1\expnd0\expndtw2
composer create-project laravel/laravel \kerning1\expnd0\expndtw0 TITLE\kerning1\expnd0\expndtw2
 --prefer-dist\'94\kerning1\expnd0\expndtw0   
\f1\b0 \
*****\
\

\f0\b On Virtual Machine !! \

\f1\b0 \
No worries about dependencies such as PHP version .. etc. \
\
1. Install Vagrant (go to site)\
2. Install Virtual Box (go to site)\
3. Install Homestead\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 	Then: \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 vagrant box add laravel\cf4 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 /\cf0 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 homestead\kerning1\expnd0\expndtw0 \shad0 \
\pard\pardeftab720
\cf0 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 	composer \cf5 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 global\cf0 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0  \cf5 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 require\cf0 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0  \cf4 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 "laravel/homestead=~2.0"\cf0 \kerning1\expnd0\expndtw0 \shad0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
4. Create SSH key and save as \'93id_rsa\'94\
	cmd: \CocoaLigature0 ssh-keygen -t rsa -C "jdelossa93@gmail.com"\
	check db : mysql -uhomestead -p\CocoaLigature1 \
5. Vagrant up in Homestead dir \'93Vagrant up\'94\
6. alias for logging into virtual box : vm\
	cmd:  ssh \CocoaLigature0 vagrant@127.0.0.1 -p 2222	\
7. homestead.yaml -> sublime ~/.homestead Homestead.yaml\
	Add your Folder under folders\
	Add your Site under sites\
\
8. sublime -> etc/hosts add 127.0.0.1 app-name.app\
\

\f0\b What is Laravel?\
\

\f1\b0 1. Installed with Composer \
2. Composer is to PHP as Node.js is to Javascript\
3. M\'97V-C Framework\
	Model: Knowledge \'97 everything related to the knowledge of domain. Think of classes as NOUNS.\
	View: Views are the pages of your application. Displays data.\
	Controller: Application Logic: receives requests, returns responses, responds to http requests, returns response in a VIEW \

\f0\b \
Models\
\

\f1\b0 1. Layer that represent model. Heart if Application \
2. Representation for table in database\
3. Eloquent (ORM) Object Relational Mapping \
	Syntax: \
	$users = User::all(); //select * from users (equivalent to sql query)\
	$user = User::find(1); // Find user with id of 1 .\
\
4. Eloquent is an easy way to query and manipulate data in database (model access layer) \

\f0\b \
Views\

\f1\b0 \
1. Found in resources/views \
2. Uses Blade for template tags without php syntax\
\

\f0\b Controllers\

\f1\b0 \
1. Facades (convenient way to call methods on router class): ie(Routes, Views, etc.)\
2. Routes - > URI for pages in your application \
Should always return a page with the following syntax:\
	return View::make(\'91hello\'92);\
Declare variables here so they can be cleanly called into your views \
	return View::make(\'91hello\'92)->with(\'91name\'92, $name);\
With Blade in views use curly brackets \{\{ name \}\} (like django)\
\
Should always use Controllers for large scale, need to maintain applications.\
 \
Basic Syntax: $songs = [\'91hey\'92, \'91hey you\'92, \'91hey hey hey you\'92]; is equivalent to $songs= $this->getSongs(); where there is a private function: \
\
private function getSongs() \{ return [\'91hey\'92, \'91hey you\'92, \'91hey hey hey you\'92]; \}\

\f0\b \

\f1\b0 \
\

\f0\b \

\f1\b0 \
\

\f0\b Working with Laravel
\f1\b0 \
\
1. app dir \
	Http dir -> Controllers dir\
	views dir -> page templates\
2. Create new controllers by using cmd \'93php artisan make:controller ControllerName\'94\
	For help cmd: \'93php artisan help make:controller\'94\
	Generate PLAIN default content: \'93php artisan make:controller PagesController \'97plain\'94\
3. All assets: JS, CSS, should be in public folder \
\

\f0\b Blade (Template Tags)\
\

\f1\b0 @extend(), @content, @if, @foreach\
php method: compact() for arrays 
\f0\b \
\
Artisan Databases \
\

\f1\b0 php artisan make:migration create_name_table \'97create=\'93name\'94
\f0\b \

\f1\b0 migrations -> version control for your db\
Creates file where you declare your table columns\
then MIGRATE with php artisan migrate \
php artisan migrate:rollback (to go back on version)\
\
dd($var); = dump data\
\
php artisan tinker (populate table) : IN VM\
\

\f0\b Eloquent (DB Syntax, Laravel\'92s Active Record Implementation): Clean powerful way to interact with persistence layer \
\

\f1\b0 Cleans DB syntax
\f0\b \
 \
\
\
}